<Application x:Class="MathPlotter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit" 
             StartupUri="BaseWindow.xaml">
    <Application.Resources>
        <!--Solid Brushes-->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#AA0000" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#AA0000" />
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="SkyBlue" />
        <!--Metro Button-->
        <Style TargetType="{x:Type Button}" BasedOn="{x:Null}" x:Key="ButtonWB">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#222222"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="5,2,5,5"/>
            <Setter Property="BorderBrush" Value="#222222"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>

                            <!-- Content Presenter is where the text content etc is placed by the control -->
                            <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Grid>

                        <!--Each state sets a brush on the Border in the template -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Background" Value="LightBlue" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="AliceBlue" TargetName="Border"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#222222" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="#222222" TargetName="Border"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="14"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" Value="#7f222222" TargetName="Border"/>
                                <Setter Property="Foreground" Value="#7f222222"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonWB}">
            <Setter Property="Background" Value="AliceBlue"/>
            <Setter Property="BorderBrush" Value="#BBB"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <!--ListBox Style-->
        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="95"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" Background="{StaticResource WindowBackgroundBrush}" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="0" CornerRadius="2">
                            <ScrollViewer Margin="0" Focusable="false">
                                    <StackPanel Margin="2" IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--ListBoxItem Style-->
        <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="Border" Padding="3" SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="3"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Stroke="LightGray" Width="30" Height="30" Grid.Column="0" Fill="LightGray"/>
                                <Canvas Grid.Column="0" Name="GlowItem" Visibility="Collapsed">
                                    <Canvas.Effect>
                                        <DropShadowEffect Direction="0" BlurRadius="5" Opacity="1" ShadowDepth="0" Color="Aqua"/>
                                    </Canvas.Effect>
                                    <Line X1="10" X2="22" Stroke="Black" Y1="4" Y2="16" StrokeThickness="4"/>
                                    <Line X1="22" X2="10" Stroke="Black" Y1="14" Y2="26" StrokeThickness="4"/>
                                </Canvas>
                                <Canvas Grid.Column="0" Name="NoGlowItem">
                                    <Line X1="10" X2="22" Stroke="DarkGray" Y1="4" Y2="16" StrokeThickness="4"/>
                                    <Line X1="22" X2="10" Stroke="DarkGray" Y1="14" Y2="26" StrokeThickness="4"/>
                                </Canvas>
                                <Rectangle Width="2" Height="30" Grid.Column="1"/>
                                    <TextBlock Name="Text"  Foreground="Black" FontWeight="Bold" FontSize="20" Grid.Column="2" Width="Auto" FontFamily="Segoe WP SemiLight" Margin="0 0">
                                        <ContentPresenter
                                          x:Name="contentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                                    </TextBlock>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="AliceBlue" TargetName="Text"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="GlowItem"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="NoGlowItem"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{StaticResource SelectedBackgroundBrush}" TargetName="Text"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>